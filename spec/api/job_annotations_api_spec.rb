require 'spec_helper'
require 'json'

# Unit tests for Phrase::JobAnnotationsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'JobAnnotationsApi' do
  before do
    # run before each test
    @api_instance = Phrase::JobAnnotationsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of JobAnnotationsApi' do
    it 'should create an instance of JobAnnotationsApi' do
      expect(@api_instance).to be_instance_of(Phrase::JobAnnotationsApi)
    end
  end

  # unit tests for job_annotation_delete
  # Delete a job annotation
  # Delete an annotation for a job.
  # @param project_id Project ID
  # @param job_id Job ID
  # @param id Name of the annotation to delete.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @option opts [String] :branch Branch to use
  # @return [nil]
  describe 'job_annotation_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for job_annotation_update
  # Create/Update a job annotation
  # Create or update an annotation for a job. If the annotation already exists, it will be updated; otherwise, a new annotation will be created.
  # @param project_id Project ID
  # @param job_id Job ID
  # @param id Name of the annotation to set or update.
  # @param job_annotation_update_parameters 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @return [JobAnnotation]
  describe 'job_annotation_update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for job_annotations_list
  # List job annotations
  # Retrieve a list of annotations for a job.
  # @param project_id Project ID
  # @param job_id Job ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @option opts [String] :branch Branch to use
  # @return [Array<JobAnnotation>]
  describe 'job_annotations_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for job_locale_annotation_delete
  # Delete a job locale annotation
  # Delete an annotation for a job locale.
  # @param project_id Project ID
  # @param job_id Job ID
  # @param job_locale_id Job Locale ID
  # @param id Name of the annotation to delete.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @option opts [String] :branch Branch to use
  # @return [nil]
  describe 'job_locale_annotation_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for job_locale_annotation_update
  # Create/Update a job locale annotation
  # Create or update an annotation for a job locale. If the annotation already exists, it will be updated; otherwise, a new annotation will be created.
  # @param project_id Project ID
  # @param job_id Job ID
  # @param job_locale_id Job Locale ID
  # @param id Name of the annotation to set or update.
  # @param job_annotation_update_parameters 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @return [JobAnnotation]
  describe 'job_locale_annotation_update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for job_locale_annotations_list
  # List job locale annotations
  # Retrieve a list of annotations for a job locale.
  # @param project_id Project ID
  # @param job_id Job ID
  # @param job_locale_id Job Locale ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @option opts [String] :branch Branch to use
  # @return [Array<JobAnnotation>]
  describe 'job_locale_annotations_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
